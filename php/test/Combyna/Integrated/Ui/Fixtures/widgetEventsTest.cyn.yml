name: Widget events test app
signals:
    switchable_thing_was_switched:
        payload:
            how_it_was_switched: text
home:
    route: app.my_route
routes:
    my_route:
        pattern: '/'
        page_view: my_view

page_views:
    my_view:
        title: !expr 'Widget events test'
        description: A test of the widget events feature
        widget:
            type: group
            children:
                - type: text
                  text: !expr 'How the thing was switched: "' ~ view_query('get_how_it_was_switched') ~ '"'
                - type: widget_events.a_generic_compound_wrapper
                  children:
                      contents:
                          type: widget_events.switchable_thing
                          attributes:
                              label: !expr 'Switch me!'
                          tags:
                              - the_switchable_thing
                          triggers:
                              widget_events.switched:
                                  instructions:
                                      - type: signal
                                        signal: app.switchable_thing_was_switched
                                        payload:
                                            how_it_was_switched: !expr event_payload('how').myInnerValue

        store:
            slots:
                how_it_was_switched:
                    type: text
                    default: !expr '(Not yet switched)'
            commands: ~
            queries:
                get_how_it_was_switched:
                    parameters: ~
                    expression: !expr slot('how_it_was_switched')
            signal_handlers:
                app.switchable_thing_was_switched:
                    instructions:
                        - type: set_slot
                          slot: how_it_was_switched
                          value: !expr signal_payload('how_it_was_switched')
