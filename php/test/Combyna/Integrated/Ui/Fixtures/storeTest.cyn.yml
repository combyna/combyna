name: Stores test app
signals:
    store_new_age:
        payload:
            new_age: number
home:
    route: app.my_route
routes:
    my_route:
        pattern: '/'
        page_view: my_view

page_views:
    my_view:
        title: "='Stores test'"
        description: A test of the stores feature
        widget:
            type: group
            captures:
                define:
                    the_entered_age: number
            children:
                - type: text
                  text: >
                      ='The age: "' ~ view_query('get_age') ~ '"'

                # Only specify part of the structure, to ensure it is coerced
                - type: text
                  text: >
                      ='Double the age: "' ~
                       view_query('get_age_multiplied_by', multiplier: 2, incomplete_structure: {}) ~
                       '"'

                - type: gui.textbox
                  attributes:
                      value: "='4'"
                  captures:
                      set:
                          the_entered_age: "=number(widget_value('text'))"

                - type: gui.button
                  attributes:
                      label: "='Save new age'"
                  tags:
                      - my_app.save_new_age_button
                  triggers:
                      gui.click:
                          instructions:
                              - type: signal
                                signal: app.store_new_age
                                payload:
                                    new_age: "=capture('the_entered_age')"
        store:
            slots:
                the_stored_age:
                    type: number
                    default: "=4"
            commands: ~
            queries:
                get_age:
                    expression: "=slot('the_stored_age')"
                get_age_multiplied_by:
                    parameters:
                        multiplier: number
                        incomplete_structure:
                            # Test that defaults and coercion are used by having this parameter
                            # that never has a "complete" argument provided
                            type: structure
                            attributes:
                                multiplier:
                                    type: number
                                    default: "=1"
                    expression: "=slot('the_stored_age') * multiplier * incomplete_structure.multiplier"
            signal_handlers:
                app.store_new_age:
                    guard: ~
                    instructions:
                        - type: set_slot
                          slot: the_stored_age
                          value: "=signal_payload('new_age')"
